<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cskaoyan.mapper.MaterialConsumeMapper">

  <resultMap id="BaseResultMap" type="com.cskaoyan.bean.MaterialConsume">
    <id column="consume_id"  property="consumeId" />
    <result column="consume_amount"  property="consumeAmount" />
    <result column="consume_date"  property="consumeDate" />
    <result column="sender"  property="sender" />
    <result column="receiver" property="receiver" />
    <result column="note" property="note" />
    <collection  property="work" ofType="com.cskaoyan.bean.Work">
      <result column="work_id"  property="workId" />
    </collection>
    <collection  property="material" ofType="com.cskaoyan.bean.Material">
      <result column="material_id"  property="materialId" />
    </collection>
  </resultMap>
    <resultMap id="ConsumeMap" type="com.cskaoyan.bean.MaterialConsume2">
        <id column="consume_id"  property="consumeId" />
        <result column="work_id"  property="workId" />
        <result column="material_id"  property="materialId" />
        <result column="consume_amount"  property="consumeAmount" />
        <result column="consume_date"  property="consumeDate" />
        <result column="sender"  property="sender" />
        <result column="receiver" property="receiver" />
        <result column="note" property="note" />
    </resultMap>
  <select id="countByExample"  resultType="java.lang.Long">
    select count(*) from material_consume
  </select>
  <insert id="insertSelective" parameterType="com.cskaoyan.bean.MaterialConsume2">
    insert into material_consume
    (consume_id,work_id,material_id,consume_amount,consume_date,sender,receiver,note)
    values(#{consumeId},#{workId}, #{materialId}, #{consumeAmount},
    #{consumeDate},#{sender}, #{receiver}, #{note})
    </insert>
    <!--<trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="consumeId != null">
        consume_id,
      </if>
      <if test="work.workId != null">
        work_id,
      </if>
      <if test="material.materialId != null">
        material_id,
      </if>
      <if test="consumeAmount != null">
        consume_amount,
      </if>
      <if test="consumeDate != null">
        consume_date,
      </if>
      <if test="sender != null">
        sender,
      </if>
      <if test="receiver != null">
        receiver,
    </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="consumeId != null">
        #{consumeId},
      </if>
      <if test="work.workId != null">
        #{work.workId},
      </if>
      <if test="material.materialId != null">
        #{material.materialId},
      </if>
      <if test="consumeAmount != null">
        #{consumeAmount},
      </if>
      <if test="consumeDate != null">
        #{consumeDate},
      </if>
      <if test="sender != null">
        #{sender},
      </if>
      <if test="receiver != null">
        #{receiver},
      </if>
      <if test="note != null">
        #{note},
      </if>
    </trim>
  </insert>-->
  <!--<update id="update" parameterType="com.cskaoyan.bean.MaterialConsume2">
    update  material_consume
    set
        work_id = #{workId},
        material_id = #{materialId},
        consume_amount = #{consumeAmount},
        consume_date = #{consumeDate},
        sender = #{sender},
        receiver = #{receiver},
        note = #{note}
    where consume_id = #{consumeId}
  </update>-->
  <update id="update" parameterType="com.cskaoyan.bean.MaterialConsume2">
    update  material_consume
    <set>
      <if test="workId != null">
        work_id = #{workId},
      </if>
      <if test="materialId != null">
        material_id = #{materialId},
      </if>
      <if test="consumeAmount != null">
        consume_amount = #{consumeAmount},
      </if>
      <if test="consumeDate != null">
        consume_date = #{consumeDate,},
      </if>
      <if test="sender != null">
        sender = #{sender},
      </if>
      <if test="receiver != null">
        receiver = #{receiver},
      </if>
      <if test="note != null">
        note = #{note}
      </if>
    </set>
    where consume_id = #{consumeId}
  </update>
  <delete id="deleteByIds">
    delete from material_consume where consume_id in
    <foreach collection="ids" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </delete>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select consume_id, work_id, material_id,
      consume_amount, consume_date, sender,
      receiver, note
    from material_consume
     WHERE consume_id = #{consumeId}
    </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select consume_id, work_id, material_id,
      consume_amount, consume_date, sender,
      receiver, note
    from material_consume
    </select>
  <select id="selectByPage" resultMap="BaseResultMap">
    select consume_id, work_id, material_id,
      consume_amount, consume_date, sender,
      receiver, note
    from material_consume
    limit #{pageSize} offset #{offset}
    </select>
  <select id="queryConsumeById" resultMap="BaseResultMap">
        select consume_id, work_id, material_id,
      consume_amount, consume_date, sender,
      receiver, note
        from material_consume
        where consume_id like #{consumeId}
        limit #{pageSize} offset #{offset}
    </select>
  <select id="queryConsumeByMaterialId" resultMap="BaseResultMap">
        select consume_id, work_id, material_id,
      consume_amount, consume_date, sender,
      receiver, note
        from material_consume
        where material_id like #{materialId}
         limit #{pageSize} offset #{offset}
    </select>
  <select id="queryConsumeByWorkId" resultMap="BaseResultMap">
        select consume_id, work_id, material_id,
      consume_amount, consume_date, sender,
      receiver, note
        from material_consume
        where work_id like #{workId}
         limit #{pageSize} offset #{offset}
    </select>
  <select id="queryAllConsumeById" resultMap="BaseResultMap">
        select consume_id, work_id, material_id,
      consume_amount, consume_date, sender,
      receiver, note
        from material_consume
        where consume_id like #{consumeId}
    </select>
  <select id="queryAllConsumeByMaterialId" resultMap="BaseResultMap">
        select consume_id, work_id, material_id,
      consume_amount, consume_date, sender,
      receiver, note
        from material_consume
        where material_id like #{materialId}
    </select>
  <select id="queryAllConsumeByWorkId" resultMap="BaseResultMap">
        select consume_id, work_id, material_id,
      consume_amount, consume_date, sender,
      receiver, note
        from material_consume
        where work_id like #{workId}
    </select>
  <select id="getworkrest" resultType="com.cskaoyan.bean.Work">
    select * from `work` where work_id = #{workId}
  </select>
</mapper>